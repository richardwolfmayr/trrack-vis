"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.logToFirebase = exports.initializeFirebase = void 0;
require("firebase/database");
require("firebase/firestore");
var app_1 = require("firebase/app");
function initializeFirebase(config) {
    var app = app_1.default.apps.length === 0 ? app_1.default.initializeApp(config) : app_1.default.app();
    var db = app_1.default.database(app);
    return {
        config: config,
        app: app,
        db: db
    };
}
exports.initializeFirebase = initializeFirebase;
function logToFirebase(rtd) {
    var addedNodes = [];
    return function (graph) {
        var path = "" + graph.root;
        var nodes = Object.keys(graph.nodes);
        var nodeToAdd = [];
        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {
            var node = nodes_1[_i];
            if (!addedNodes.includes(node)) {
                nodeToAdd.push(node);
                addedNodes.push(node);
            }
        }
        nodeToAdd.forEach(function (node) {
            var actualNode = JSON.parse(JSON.stringify(graph.nodes[node]));
            rtd
                .ref(path + "/nodes/" + node)
                .set(actualNode)
                .then(function () {
                var log = {
                    time: Date.now(),
                    status: 'error',
                    currentNodeId: graph.current
                };
            })
                .catch(function (err) {
                console.log(err);
                throw new Error('Something went wrong while logging.');
            });
        });
    };
}
exports.logToFirebase = logToFirebase;
//# sourceMappingURL=FirebaseFunctions.js.map